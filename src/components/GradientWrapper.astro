<!-- Shout out to https://github.com/baunov/gradients-bg --><!-- TODO: Make this a reusable, dynamic component -->
<div class="relative">
  <div class="z-10 relative">
    <slot />
  </div>
  <div
    class="z-[2] absolute inset-0 bg-gradient-to-b from-transparent to-gray-900"
  >
  </div>
  <div class="gradient-bg">
    <svg xmlns="http://www.w3.org/2000/svg">
      <defs>
        <filter id="goo">
          <feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur"
          ></feGaussianBlur>
          <feColorMatrix
            in="blur"
            mode="matrix"
            values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8"
            result="goo"></feColorMatrix>
          <feBlend in="SourceGraphic" in2="goo"></feBlend>
        </filter>
      </defs>
    </svg>
    <div class="gradients-container">
      <div class="g1"></div>
      <div class="g2"></div>
      <div class="g3"></div>
      <div class="g4"></div>
      <div class="g5"></div>
    </div>
  </div>
</div>

<style lang="scss">
  :root {
    --test: ;
    --color-bg1: #111827;
    --color-bg2: #111827;
    --color1: 106, 33, 166;
    --color2: 55, 48, 163;
    --color3: 106, 33, 166;
    --color4: 55, 48, 163;
    --color5: 106, 33, 166;
    --circle-size: 85%;
    --blending: hard-light;
  }

  @keyframes moveInCircle {
    0% {
      transform: rotate(0deg);
    }
    50% {
      transform: rotate(180deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes moveVertical {
    0% {
      transform: translateY(-50%);
    }
    50% {
      transform: translateY(50%);
    }
    100% {
      transform: translateY(-50%);
    }
  }

  @keyframes moveHorizontal {
    0% {
      transform: translateX(-50%) translateY(-10%);
    }
    50% {
      transform: translateX(50%) translateY(10%);
    }
    100% {
      transform: translateX(-50%) translateY(-10%);
    }
  }

  .gradient-bg {
    z-index: 1;
    width: 100vw;
    opacity: 0.5;
    height: 100%;
    position: absolute;
    overflow: hidden;
    background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2));
    top: 0;
    left: 0;

    svg {
      position: fixed;
      top: 0;
      left: 0;
      width: 0;
      height: 0;
    }

    .gradients-container {
      filter: url(#goo) blur(40px);
      width: 100%;
      height: 100%;
    }

    .g1 {
      position: absolute;
      background: radial-gradient(
          circle at center,
          rgba(var(--color1), 0.8) 0,
          rgba(var(--color1), 0) 50%
        )
        no-repeat;
      mix-blend-mode: var(--blending);

      width: var(--circle-size);
      height: var(--circle-size);
      top: calc(50% - var(--circle-size) / 2);
      left: calc(50% - var(--circle-size) / 2);

      transform-origin: center center;
      animation: moveVertical 60s ease infinite;

      opacity: 1;
    }

    .g2 {
      position: absolute;
      background: radial-gradient(
          circle at center,
          rgba(var(--color2), 0.8) 0,
          rgba(var(--color2), 0) 50%
        )
        no-repeat;
      mix-blend-mode: var(--blending);

      width: var(--circle-size);
      height: var(--circle-size);
      top: calc(50% - var(--circle-size) / 2);
      left: calc(50% - var(--circle-size) / 2);

      transform-origin: calc(50% - 400px);
      animation: moveInCircle 40s reverse infinite;

      opacity: 1;
    }

    .g3 {
      position: absolute;
      background: radial-gradient(
          circle at center,
          rgba(var(--color3), 0.8) 0,
          rgba(var(--color3), 0) 50%
        )
        no-repeat;
      mix-blend-mode: var(--blending);

      width: var(--circle-size);
      height: var(--circle-size);
      top: calc(50% - var(--circle-size) / 2 + 200px);
      left: calc(50% - var(--circle-size) / 2 - 500px);

      transform-origin: calc(50% + 400px);
      animation: moveInCircle 80s linear infinite;

      opacity: 1;
    }

    .g4 {
      position: absolute;
      background: radial-gradient(
          circle at center,
          rgba(var(--color4), 0.8) 0,
          rgba(var(--color4), 0) 50%
        )
        no-repeat;
      mix-blend-mode: var(--blending);

      width: var(--circle-size);
      height: var(--circle-size);
      top: calc(50% - var(--circle-size) / 2);
      left: calc(50% - var(--circle-size) / 2);

      transform-origin: calc(50% - 200px);
      animation: moveHorizontal 80s ease infinite;

      opacity: 0.7;
    }

    .g5 {
      position: absolute;
      background: radial-gradient(
          circle at center,
          rgba(var(--color5), 0.8) 0,
          rgba(var(--color5), 0) 50%
        )
        no-repeat;
      mix-blend-mode: var(--blending);

      width: calc(var(--circle-size) * 2);
      height: calc(var(--circle-size) * 2);
      top: calc(50% - var(--circle-size));
      left: calc(50% - var(--circle-size));

      transform-origin: calc(50% - 800px) calc(50% + 200px);
      animation: moveInCircle 40s ease infinite;

      opacity: 1;
    }

    .interactive {
      position: absolute;
      background: radial-gradient(
          circle at center,
          rgba(var(--color-interactive), 0.8) 0,
          rgba(var(--color-interactive), 0) 50%
        )
        no-repeat;
      mix-blend-mode: var(--blending);

      width: 100%;
      height: 100%;
      top: -50%;
      left: -50%;

      opacity: 0.7;
    }
  }
</style>
